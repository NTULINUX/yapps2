#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# GNU copyright 1997 to 1999 by Joey Hess.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1




CFLAGS = -Wall -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif
ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	INSTALL_PROGRAM += -s
endif

configure: configure-stamp
configure-stamp:
	dh_testdir
	# Add here commands to configure the package.

	touch configure-stamp


build: build-stamp

build-stamp: configure-stamp 
	dh_testdir

	# Add here commands to compile the package.
	python setup.py build
	#/usr/bin/docbook-to-man debian/yapps.sgml > yapps.1

	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp

	rm -rf build debian/python-yapps
	test -f changelog || bk changes > changelog

	dh_clean 

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs

	# Add here commands to install the package into debian/yapps.
	python setup.py install --root=$(shell pwd)/debian/python-yapps --no-compile --install-purelib=/usr/lib/site-python
	install -m 755 yapps2.py debian/python-yapps/usr/bin/yapps
	install -m 644 debian/overrides.lintian debian/python-yapps/usr/share/lintian/overrides/python-yapps
	install -m 644 debian/overrides.linda debian/python-yapps/usr/share/linda/overrides/python-yapps


# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs 
	dh_installdocs -n
	dh_installexamples examples/* test yapps_grammar.g
	dh_installman debian/yapps.1
	dh_compress
	dh_compress usr/share/doc/python-yapps/NOTES
	dh_compress usr/share/doc/python-yapps/LICENSE
	dh_fixperms
#	dh_perl
#	dh_python
#	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure
